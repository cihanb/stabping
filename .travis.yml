language: rust

matrix:
  include:
    - os: linux
      rust: stable
      env: TARGET=arm-unknown-linux-gnueabihf TARGET_LINKER=arm-linux-gnueabihf-gcc SKIP_TEST=y
      addons:
        apt:
          packages:
            - tree
            - gcc-arm-linux-gnueabihf
            - libc6-armhf-cross
            - libc6-dev-armhf-cross
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu IS_HOST=y
      addons:
        apt:
          packages:
            - tree

before_install:
  - export PATH="$HOME/.cargo/bin:$PATH"
  - curl 'https://sh.rustup.rs' -sSf | sh -s -- -y
  - if [ -z "$IS_HOST" ]; then rustup target add "$TARGET"; fi
  - if [ ! -z "$TARGET_LINKER" ]; then printf '\n[target.%s]\nlinker = "%s"\n' "$TARGET" "$TARGET_LINKER" >> "$HOME/.cargo/config"; fi
  - if [ -f "$HOME/.cargo/config" ]; then cat "$HOME/.cargo/config"; fi

script:
  - export PATH="$HOME/.cargo/bin:$PATH"
  - if [ -z "$TRAVIS_TAG" ]; then cargo build --verbose --target="$TARGET" else cargo build --release --verbose --target="$TARGET"
  - if [ -z "$SKIP_TEST" ]; then cargo test --verbose --target="$TARGET"; fi
  - tree target

after_script:
  - if [ ! -z "$TRAVIS_TAG" ]; then ./release.py
